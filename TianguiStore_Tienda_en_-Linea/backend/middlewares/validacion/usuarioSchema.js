const { checkSchema } = require("express-validator");

// 游릭 Esquema para registro de usuario (POST)
const usuarioSchema = checkSchema({
  nombre: {
    notEmpty: {
      errorMessage: "El nombre es obligatorio"
    },
    isLength: {
      options: { min: 2, max: 100 },
      errorMessage: "El nombre debe tener entre 2 y 100 caracteres"
    }
  },
  correo_electronico: {
    isEmail: {
      errorMessage: "Correo electr칩nico inv치lido"
    },
    notEmpty: {
      errorMessage: "El correo electr칩nico es obligatorio"
    }
  },
  contrasena: {
    isStrongPassword: {
      errorMessage: "La contrase침a debe tener al menos 8 caracteres, una may칰scula y un n칰mero"
    },
    notEmpty: {
      errorMessage: "La contrase침a es obligatoria"
    }
  },
  apellido_paterno: {
    optional: true,
    isLength: {
      options: { max: 100 },
      errorMessage: "El apellido paterno no debe exceder los 100 caracteres"
    }
  },
  apellido_materno: {
    optional: true,
    isLength: {
      options: { max: 100 },
      errorMessage: "El apellido materno no debe exceder los 100 caracteres"
    }
  },
  direccion: {
    optional: true,
    isLength: {
      options: { max: 255 },
      errorMessage: "La direcci칩n no debe exceder los 255 caracteres"
    }
  },
  telefono: {
    optional: true,
    isMobilePhone: {
      errorMessage: "El n칰mero de tel칠fono no es v치lido"
    }
  },
  tipo_usuario: {
    optional: true,
    isIn: {
      options: [["cliente", "admin", "soporte"]],
      errorMessage: "El tipo de usuario debe ser 'cliente', 'admin' o 'soporte'"
    }
  }
});

// 游리 Esquema para actualizaci칩n de usuario (PUT/PATCH)
const usuarioUpdateSchema = checkSchema({
  nombre: {
    optional: true,
    isLength: {
      options: { min: 2, max: 100 },
      errorMessage: "El nombre debe tener entre 2 y 100 caracteres"
    }
  },
  correo_electronico: {
    optional: true,
    isEmail: {
      errorMessage: "Correo electr칩nico inv치lido"
    }
  },
  contrasena: {
    optional: true,
    isStrongPassword: {
      errorMessage: "La contrase침a debe tener al menos 8 caracteres, una may칰scula y un n칰mero"
    }
  },
  apellido_paterno: {
    optional: true,
    isLength: {
      options: { max: 100 },
      errorMessage: "El apellido paterno no debe exceder los 100 caracteres"
    }
  },
  apellido_materno: {
    optional: true,
    isLength: {
      options: { max: 100 },
      errorMessage: "El apellido materno no debe exceder los 100 caracteres"
    }
  },
  direccion: {
    optional: true,
    isLength: {
      options: { max: 255 },
      errorMessage: "La direcci칩n no debe exceder los 255 caracteres"
    }
  },
  telefono: {
    optional: true,
    isMobilePhone: {
      errorMessage: "El n칰mero de tel칠fono no es v치lido"
    }
  },
  tipo_usuario: {
    optional: true,
    isIn: {
      options: [["cliente", "admin", "soporte"]],
      errorMessage: "El tipo de usuario debe ser 'cliente', 'admin' o 'soporte'"
    }
  },
  activo: {
    optional: true,
    isBoolean: {
      errorMessage: "El estado activo debe ser booleano (true o false)"
    }
  }
});

// 游릭 Esquema para cambiar contrase침a (PATCH)
const cambioContrasenaSchema = checkSchema({
  nuevo_hash: {
    notEmpty: {
      errorMessage: "Debes proporcionar la nueva contrase침a (hash)"
    },
    isStrongPassword: {
      errorMessage: "La nueva contrase침a debe tener al menos 8 caracteres, una may칰scula y un n칰mero"
    }
  }
});

module.exports = {
  usuarioSchema,
  usuarioUpdateSchema,
  cambioContrasenaSchema
};
